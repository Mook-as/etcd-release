#!/bin/bash

set -e -x

script_dir=$(dirname $0)

if [ $# -ne 2 ]; then
  echo 'Expected 2 argument (path to deployment directory), received $#'
  exit 1
fi
deployment_dir=$1
credentials_dir=$2

command -v aws >/dev/null || { echo "aws is required"; exit 1; }
command -v jq >/dev/null || { echo "jq is required"; exit 1; }

set +x
  source ${deployment_dir}/aws_environment

  if [ -z ${AWS_DEFAULT_REGION} ]; then
    echo 'AWS_DEFAULT_REGION is not set'
    exit 1
  fi

  if [ -z ${AWS_ACCESS_KEY_ID} ]; then
    echo 'AWS_DEFAULT_REGION is not set'
    exit 1
  fi

  if [ -z ${AWS_SECRET_ACCESS_KEY} ]; then
    echo 'AWS_DEFAULT_REGION is not set'
    exit 1
  fi

set -x

# deploy infrastructure
if ! aws cloudformation describe-stacks --stack-name etcd-buckets > /dev/null; then
  aws cloudformation create-stack \
    --stack-name etcd-buckets \
    --template-body file://$script_dir/../templates/aws/etcd-blobs-bucket.json \
    --capabilities CAPABILITY_IAM > /dev/null
else
  aws cloudformation update-stack \
    --stack-name etcd-buckets \
    --template-body file://$script_dir/../templates/aws/etcd-blobs-bucket.json \
    --capabilities CAPABILITY_IAM > /dev/null || true
fi

mkdir -p ${deployment_dir}/artifacts/iam-users
mkdir -p ${deployment_dir}/artifacts/deployments
mkdir -p generated-stubs

start_time_in_s=$(date +%s)
wait_time_in_s=$((30 * 60))
deadline_in_s=$(($start_time_in_s + $wait_time_in_s))
while aws cloudformation describe-stacks --stack-name etcd-buckets | grep StackStatus | grep IN_PROGRESS ; do
  echo "CloudFormation stack 'etcd-buckets' still in progress..."
  current_time_in_s=$(date +%s)
  remaining_time_in_s=$(($deadline_in_s - $current_time_in_s))

  if [ "$remaining_time_in_s" -gt 0 ]; then
    echo "   Waiting ${remaining_time_in_s} more seconds."
    sleep 15
  else
    echo "   Waited ${wait_time_in_s}, aborting."
    exit 1
  fi
done

if ! aws cloudformation describe-stacks --stack-name etcd-buckets | grep StackStatus | grep COMPLETE ; then
  echo 'Cloud formation failure'
  exit 1
fi

aws cloudformation describe-stacks --stack-name etcd-buckets \
  > ${deployment_dir}/artifacts/iam-users/etcd-buckets.json

ETCD_BLOBS_BUCKET_ACCESS_KEY_ID=$(cat ${deployment_dir}/artifacts/iam-users/etcd-buckets.json | jq -e -r ".Stacks[0].Outputs[0].OutputValue" )
ETCD_BLOBS_BUCKET_SECRET_KEY=$(cat ${deployment_dir}/artifacts/iam-users/etcd-buckets.json | jq -e -r ".Stacks[0].Outputs[1].OutputValue" )
ETCD_BLOBS_DOMAIN_NAME=$(cat ${deployment_dir}/artifacts/iam-users/etcd-buckets.json | jq -e -r ".Stacks[0].Outputs[2].OutputValue" )

cat > ${credentials_dir}/private.yml <<EOF
---
blobstore:
  s3:
    secret_access_key: $ETCD_BLOBS_BUCKET_SECRET_KEY
    access_key_id: $ETCD_BLOBS_BUCKET_ACCESS_KEY_ID
EOF

cat > ${script_dir}/../config/final.yml <<EOF
---
final_name: etcd
min_cli_version: 1.5.0.pre.1001
blobstore:
  provider: s3
  options:
    bucket_name: $ETCD_BLOBS_DOMAIN_NAME
EOF
